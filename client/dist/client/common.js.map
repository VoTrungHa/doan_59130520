{"version":3,"sources":["./src/app/entity/tailieu/tailieu.service.ts","./src/app/entity/thi/thi.service.ts"],"names":[],"mappings":";;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAA2D;;;AAKpD,MAAM,cAAc;IACzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IACxC,YAAY,CAAC,IAAI;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,wEAAmB,GAAG,gBAAgB,EACtC,EAAE,IAAI,EAAE,EACR,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IACD,gBAAgB,CAAC,GAAG;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wEAAmB,GAAG,YAAY,EAAC,EAAC,GAAG,EAAC,EAAC,EAAC,OAAO,EAAC,UAAU,EAAC,CAAC,CAAC;IACvF,CAAC;;4EAXU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;ACFpB;AAAA;AAAA;AAAA;AAAA;AAG8B;;;AAIvB,MAAM,UAAU;IACrB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,MAAM,CAAC,IAAI;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,wEAAmB,GAAG,eAAe,EACrC,EAAE,IAAI,EAAE,EACR,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IACD,OAAO,CAAC,EAAE;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wEAAmB,GAAG,cAAc,EAAE,EAAE,EAAE;YAC7D,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,IAAI;QACT,sBAAsB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,wEAAmB,GAAG,eAAe,EACrC,EAAE,IAAI,EAAE,EACR,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IACD,OAAO,CAAC,GAAG;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,wEAAmB;YACjB,2BAA2B;YAC3B,GAAG,CAAC,YAAY;YAChB,SAAS;YACT,GAAG,CAAC,KAAK;YACT,eAAe;YACf,GAAG,CAAC,WAAW;YACf,QAAQ;YACR,GAAG,CAAC,IAAI;YACR,WAAW;YACX,GAAG,CAAC,OAAO;YACX,SAAS;YACT,GAAG,CAAC,KAAK;YACT,UAAU;YACV,GAAG,CAAC,MAAM;YACV,YAAY;YACZ,GAAG,CAAC,QAAQ;YACZ,SAAS;YACT,GAAG,CAAC,KAAK,EACX,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IACD,gBAAgB,CAAC,EAAE;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,wEAAmB,GAAG,iBAAiB,GAAG,EAAE,EAE5C,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,IAAI;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,4EAAuB,GAAG,wBAAwB,EAClD,IAAI,EACJ;YACE,OAAO,EAAE,UAAU;SACpB,CACF,CAAC;IACJ,CAAC;;oEAhEU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SERVER_AUTH_API_URL } from 'src/app/app.contants';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root',\n})\nexport class TailieuService {\n  constructor(private http: HttpClient) {}\n  loadAllDethi(data):Observable<any>{\n    return this.http.post(\n      SERVER_AUTH_API_URL + `getbystatetrue`,\n      { data },\n      { observe: 'response' }\n    );\n  }\n  loadDethibyclass(_id):Observable<any>{\n    return this.http.post(SERVER_AUTH_API_URL + `getbyclass`,{_id},{observe:'response'});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {\n  SERVER_AUTH_API_URL,\n  SERVER_QUESTION_API_URL,\n} from 'src/app/app.contants';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThiService {\n  constructor(private http: HttpClient) {}\n\n  create(data): Observable<any> {\n    return this.http.post(\n      SERVER_AUTH_API_URL + `bailam/create`,\n      { data },\n      { observe: 'response' }\n    );\n  }\n  getById(id): Observable<any> {\n    return this.http.get(SERVER_AUTH_API_URL + `bailambyid/${id}`, {\n      observe: 'response',\n    });\n  }\n\n  NopBai(data): Observable<any> {\n    //  console.log(data);\n    return this.http.post(\n      SERVER_AUTH_API_URL + `bailam/update`,\n      { data },\n      { observe: 'response' }\n    );\n  }\n  loadAll(req): Observable<any> {\n    return this.http.get(\n      SERVER_AUTH_API_URL +\n        'bailam/search/query?page=' +\n        req.current_page +\n        '&limit=' +\n        req.limit +\n        '&idPerformer=' +\n        req.idPerformer +\n        '&sort=' +\n        req.sort +\n        '&reverse=' +\n        req.reverse +\n        '&kyThi=' +\n        req.kyThi +\n        '&search=' +\n        req.search +\n        '&createBy=' +\n        req.createBy +\n        '&Class=' +\n        req.Class,\n      { observe: 'response' }\n    );\n  }\n  loadAllPerformer(id): Observable<any> {\n    return this.http.get(\n      SERVER_AUTH_API_URL + 'bailam/loadAll/' + id,\n\n      { observe: 'response' }\n    );\n  }\n\n  getDataToServer(data): Observable<any> {\n    return this.http.post(\n      SERVER_QUESTION_API_URL + `downloadFileXml/bailam`,\n      data,\n      {\n        observe: 'response',\n      }\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}